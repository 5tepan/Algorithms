{
1. 4.6. ?????? ????? (6)
????????? ????????? ???????? ????? ????? ??????????? ??????????? ?????.
2.Фомин Степан ПС-21
3. Dev+GNU Pascal 1.9.4.13
   Кодировка - 1251
4.INPUT - input.txt
  OUTPUT - output.txt
5.INPUT - ?????? ?????? ????? INPUT.TXT ???????? ????? ????? L (1 = L = 1500) ? ?????????? ????? ????? N (1 = N = 20). ?????? ?????? ???????? N ???????? Ci ????? ??????: ????????? ????? ????? (1 = Ci = 1500).
  OUTPUT - ? ?????? ?????? ????????? ?????????? ????? ????? K, ??????????? ??? ???????, ? ????? ??????????? ?????????? ????? M. ? ????????? K ??????? ????????? ????? ?????? ?? 2 ?????: ????????? ?????? ? ?????????? ??????????? ?????? ??????. ??? K ????? ?????? ????????? ? ??????? ???????? ????????? ?????. ???? ??????? ????????? ????????? ???????, ?????????? ??????? ????? ?? ???. ???? ????????? ????? ????????? ??????????, ?? ???????? ???? ?????? ????????? No.

}





Program monetspas;
CONST 
  MaxSumma=1500;
  MaxKol=20;
Type
  Array20= array [0..MaxKol] of INTEGER;
  Array1500= array [0..MaxSumma,1..3] of INTEGER;  //каждый шаг: кол-во взятых монет,монету взяли на данном шаге, (3- количество мотет данного типа взяли в итоговом варианте)
Var
  Fin,Fout: Text;
  NameFile: STRING;
  CH: CHAR;
  Monets: Array20; 
  VariantRaz: Array1500; 
  KolMonets,Summa,b,i: INTEGER; 
  Nstr: STRING;

PROCEDURE Sort(); //возрастание
VAR i,j,mon: INTEGER;
BEGIN
  FOR i:=1 to KolMonets 
   DO
     FOR j:=i+1 to KolMonets 
     DO
       IF (Monets[j] < Monets[i])
         THEN
           BEGIN
             mon:=Monets[j];
             Monets[j]:=Monets[i];
             Monets[i]:=mon;
           END;
END;

PROCEDURE Print();                                                              
VAR i,Kol: INTEGER;
BEGIN
  i:=Summa;
  kol:=0;
  WHILE (VariantRaz[i][2]>0)
  DO
    BEGIN
      IF VariantRaz[VariantRaz[i][2]][3]=0 //кол-во различных монет
      THEN
        kol:=kol+1;
      VariantRaz[VariantRaz[i][2]][3]:=VariantRaz[VariantRaz[i][2]][3]+1; //кол-во монет текущего достоинства
      VariantRaz[0][3]:=VariantRaz[0][3]+1;  //в нулевой пишем всего монет
      i:=i-VariantRaz[i][2]; //номер пред. шаг=номер текущего минус текущая монета  
    END;  
  IF VariantRaz[0][3]=0
  THEN
    WRITELN(FOut,"No")
  ELSE    
    BEGIN
      WRITELN(FOut,kol," ",VariantRaz[0][3]);   
      FOR i:=MaxSumma DOWNTO 1
      DO
        IF VariantRaz[i][3]>0
        THEN
          WRITELN(FOut,i," ",VariantRaz[i][3]);   
    END;      
END;

PROCEDURE SetVariantRaz();
VAR i, j: INTEGER;
BEGIN
  FOR i:=1 TO Summa      
  DO
    BEGIN
      j:=1;
      WHILE (Monets[j]>0) AND (Monets[j]<= i)
      DO
        BEGIN
          IF ((VariantRaz[i-Monets[j]][2]<>0) OR (i-Monets[j]=0)) AND((VariantRaz[i][1]=0) OR (VariantRaz[i-Monets[j]][1]<VariantRaz[i][1])) // на пред.шаге 1.есть монета и 2.кол-во шагов минимально
          THEN
            BEGIN
              VariantRaz[i][1]:=VariantRaz[i-Monets[j]][1]+1;
              VariantRaz[i][2]:=Monets[j];
            END;  
          j:=j+1;             
        END;        
    END;
END;

BEGIN
  ASSIGN(Fin, 'input.txt');
  RESET(Fin);
  ASSIGN(FOut, 'output.txt');
  REWRITE(FOut);
  //1  сумма,кол-во монет
  READLN(Fin,Nstr);
  i:=Pos(' ',Nstr);  
  VAL(Copy(Nstr,1,i-1),Summa,b);
  VAL(Copy(Nstr,i+1,Length(Nstr)),KolMonets,b);
  IF  Summa>MaxSumma
  THEN
    BEGIN
      WRITE(FOut,">",MaxSumma);
      EXIT;
    END;  
  IF  KolMonets>MaxKol
  THEN
    BEGIN
      WRITE(FOut,">",MaxKol);
      EXIT;
    END;  
    
  //2 монеты
  i:=1;
  Nstr:="";
  WHILE NOT EOLN(Fin)
  DO
    BEGIN
      READ(Fin,CH); 
      IF  CH=' '
      THEN
        BEGIN
          VAL(Nstr,Monets[i],b);
          i:=i+1;
          Nstr:="";
        END
      ELSE
        Nstr:=Nstr+CH;
    END;  
  VAL(Nstr,Monets[i],b);            
  Sort();
  SetVariantRaz();
  Print();    
END.
